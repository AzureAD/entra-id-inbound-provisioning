{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "defaultValue": "CSV2SCIMBulkUpload",
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "asia",
        "asiapacific",
        "australia",
        "australiacentral",
        "australiacentral2",
        "australiaeast",
        "australiasoutheast",
        "brazil",
        "brazilsouth",
        "brazilsoutheast",
        "canada",
        "canadacentral",
        "canadaeast",
        "centralindia",
        "centralus",
        "centraluseuap",
        "centralusstage",
        "chinaeast",
        "chinanorth",
        "eastasia",
        "eastasiastage",
        "eastus",
        "eastus2",
        "eastus2euap",
        "eastus2stage",
        "eastusstage",
        "europe",
        "francecentral",
        "francesouth",
        "germanycentral",
        "germanynorth",
        "germanynortheast",
        "germanywestcentral",
        "global",
        "india",
        "japan",
        "japaneast",
        "japanwest",
        "jioindiawest",
        "koreacentral",
        "koreasouth",
        "northcentralus",
        "northcentralusstage",
        "northeurope",
        "norwayeast",
        "norwaywest",
        "southafricanorth",
        "southafricawest",
        "southcentralus",
        "southcentralusstage",
        "southeastasia",
        "southeastasiastage",
        "southindia",
        "switzerland",
        "switzerlandnorth",
        "switzerlandwest",
        "uaecentral",
        "uaenorth",
        "uk",
        "uksouth",
        "ukwest",
        "unitedstates",
        "usdodeast",
        "usdodwest",
        "usgovarizona",
        "usgoviowa",
        "usgovtexas",
        "usgovvirginia",
        "usseceast",
        "ussecwest",
        "west",
        "westcentralus",
        "westeurope",
        "westindia",
        "westus",
        "westus2",
        "westus2stage",
        "westus3",
        "westusstage"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "Convert_CSV_to_JSON-URI": {
      "type": "string",
      "defaultValue": "https://webapp-qy3rid3tc4pcq.azurewebsites.net/csvtojson"
    },
    "Send_SCIMBulkPayload_to_API_endpoint-URI": {
      "type": "string",
      "defaultValue": "https://graph.microsoft.com/beta/servicePrincipals/5f224b4d-9c1b-3190-bcbb-8e6a23b015eb/synchronization/jobs/API2AD.b12381d28eaf43bcb392923d3a30fc6e.77e28e0f-8d38-4502-9251-134f2d6e40a9/bulkUpload"
    },
    "Send_SCIMBulkPayload_to_API_endpoint-Audience": {
      "type": "string",
      "defaultValue": "https://graph.microsoft.com"
    },
    "RecurrenceFrequency": {
      "type": "string",
      "defaultValue": "Day"
    },
    "RecurrenceInterval": {
      "type": "int",
      "defaultValue": 5
    },
    "azurefile_name": {
      "type": "string",
      "defaultValue": "azurefile"
    },
    "azurefile_displayName": {
      "type": "string",
      "defaultValue": "CSVData"
    },
    "azurefile_accountName": {
      "type": "string",
      "defaultValue": "csveastus",
      "metadata": {
        "description": "Name or file endpoint of the Azure Storage account the connector should use."
      }
    },
    "azurefile_accessKey": {
      "type": "securestring",
      "defaultValue": null,
      "metadata": {
        "description": "Specify a valid primary/secondary Azure Storage account access key."
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('logicAppLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azurefile_name'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "[parameters('RecurrenceFrequency')]",
                "interval": "[parameters('RecurrenceInterval')]"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Convert_CSV_to_JSON": {
              "runAfter": {
                "Get_CSV_records": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": "@outputs('Get_CSV_records')",
                "headers": {
                  "Content-Type": "text/csv"
                },
                "method": "POST",
                "uri": "[parameters('Convert_CSV_to_JSON-URI')]"
              }
            },
            "For_each": {
              "foreach": "@variables('JSONInputArray')",
              "actions": {
                "Condition": {
                  "actions": {
                    "Append_last_SCIMUser_record_in_the_chunk": {
                      "runAfter": {},
                      "type": "AppendToStringVariable",
                      "inputs": {
                        "name": "SCIMBulkPayload",
                        "value": "@outputs('Construct_SCIMUser')"
                      }
                    },
                    "Finalize_SCIMBulkPayload": {
                      "runAfter": {
                        "Append_last_SCIMUser_record_in_the_chunk": [
                          "Succeeded"
                        ]
                      },
                      "type": "AppendToStringVariable",
                      "inputs": {
                        "name": "SCIMBulkPayload",
                        "value": "  ],\n  \"failOnErrors\": null\n}"
                      }
                    },
                    "Prepare_next_chunk_of_SCIMBulkPayload": {
                      "runAfter": {
                        "Reset_Iteration_Count": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "SCIMBulkPayload",
                        "value": "{\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:BulkRequest\"\n  ],\n  \"Operations\": ["
                      }
                    },
                    "Reset_Iteration_Count": {
                      "runAfter": {
                        "Send_SCIMBulkPayload_to_API_endpoint": [
                          "Succeeded"
                        ]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "IterationCount",
                        "value": 0
                      }
                    },
                    "Send_SCIMBulkPayload_to_API_endpoint": {
                      "runAfter": {
                        "View_SCIMBulkPayload": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "authentication": {
                          "audience": "[parameters('Send_SCIMBulkPayload_to_API_endpoint-Audience')]",
                          "type": "ManagedServiceIdentity"
                        },
                        "body": "@variables('SCIMBulkPayload')",
                        "headers": {
                          "Content-Type": "application/scim+json"
                        },
                        "method": "POST",
                        "uri": "[parameters('Send_SCIMBulkPayload_to_API_endpoint-URI')]"
                      },
                      "operationOptions": "DisableAsyncPattern"
                    },
                    "View_SCIMBulkPayload": {
                      "runAfter": {
                        "Finalize_SCIMBulkPayload": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "@variables('SCIMBulkPayload')"
                    }
                  },
                  "runAfter": {
                    "Construct_SCIMUser": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Append_SCIMUser_record": {
                        "runAfter": {},
                        "type": "AppendToStringVariable",
                        "inputs": {
                          "name": "SCIMBulkPayload",
                          "value": "@concat(outputs('Construct_SCIMUser'),',')"
                        }
                      }
                    }
                  },
                  "expression": {
                    "or": [
                      {
                        "equals": [
                          "@variables('NumberOfRecordsToProcess')",
                          0
                        ]
                      },
                      {
                        "equals": [
                          "@variables('IterationCount')",
                          50
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Construct_SCIMUser": {
                  "runAfter": {
                    "Decrement_NumberOfRecords_": [
                      "Succeeded"
                    ]
                  },
                  "type": "Compose",
                  "inputs": {
                    "bulkId": "@{guid()}",
                    "data": {
                      "active": "@if(equals(items('For_each')?['WorkerStatus'],'Active'),true,false)",
                      "addresses": {
                        "country": "@{items('For_each')?['CountryCode']}",
                        "locality": "@{items('For_each')?['City']}",
                        "postalCode": "@{items('For_each')?['ZipCode']}",
                        "streetAddress": "@{items('For_each')?['StreetAddress']}",
                        "type": "work"
                      },
                      "displayName": "@{items('For_each')?['FullName']}",
                      "externalId": "@{items('For_each')?['WorkerID']}",
                      "name": {
                        "familyName": "@{items('For_each')?['LastName']}",
                        "givenName": "@{items('For_each')?['FirstName']}"
                      },
                      "nickName": "@{items('For_each')?['UserID']}",
                      "organization": "@{items('For_each')?['Company']}",
                      "phoneNumbers": {
                        "type": "work",
                        "value": "@{items('For_each')?['OfficePhone']}"
                      },
                      "schemas": [
                        "urn:ietf:params:scim:schemas:core:2.0:User",
                        "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User",
                        "urn:ietf:params:scim:schemas:extension:csv:1.0:User"
                      ],
                      "title": "@{items('For_each')?['JobTitle']}",
                      "urn:ietf:params:scim:schemas:extension:csv:1.0:User": {
                         "GenderPronoun": "@{items('For_each')?['GenderPronoun']}",
                         "HireDate": "@{items('For_each')?['HireDate']}",
                         "JobCode": "@{items('For_each')?['Custom01']}"
                      },                      
                      "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User": {
                        "costCenter": "@{items('For_each')?['CostCenter']}",
                        "department": "@{items('For_each')?['Department']}",
                        "division": "@{items('For_each')?['Division']}",
                        "employeeNumber": "@{items('For_each')?['WorkerID']}",
                        "manager": {
                          "value": "@{items('For_each')?['ManagerID']}"
                        }
                      },
                      "userName": "@{items('For_each')?['UserID']}",
                      "userType": "@{items('For_each')?['WorkerType']}"
                    },
                    "method": "POST",
                    "path": "/Users"
                  }
                },
                "Decrement_NumberOfRecords_": {
                  "runAfter": {
                    "Increment_IterationCount": [
                      "Succeeded"
                    ]
                  },
                  "type": "DecrementVariable",
                  "inputs": {
                    "name": "NumberOfRecordsToProcess",
                    "value": 1
                  }
                },
                "Increment_IterationCount": {
                  "runAfter": {},
                  "type": "IncrementVariable",
                  "inputs": {
                    "name": "IterationCount",
                    "value": 1
                  }
                }
              },
              "runAfter": {
                "Initialize_InvocationDateTime": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "Get_CSV_records": {
              "runAfter": {
                "Get_file_content_using_path": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@body('Get_file_content_using_path')"
            },
            "Get_file_content_using_path": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azurefile']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/GetFileContentByPath",
                "queries": {
                  "inferContentType": true,
                  "path": "/csvdata/csv-with-5-records.txt",
                  "queryParametersSingleEncoded": true
                }
              }
            },
            "Initialize_InvocationDateTime": {
              "runAfter": {
                "Initialize_SCIMBulkPayload": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "InvocationDateTime",
                    "type": "string",
                    "value": "@{utcNow()}"
                  }
                ]
              }
            },
            "Initialize_IterationCount": {
              "runAfter": {
                "Initialize_NumberOfRecordsToProcess": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "IterationCount",
                    "type": "integer",
                    "value": 0
                  }
                ]
              }
            },
            "Initialize_JSONInputArray": {
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "JSONInputArray",
                    "type": "array",
                    "value": "@body('Parse_JSON')?['rows']"
                  }
                ]
              }
            },
            "Initialize_NumberOfRecordsToProcess": {
              "runAfter": {
                "Initialize_JSONInputArray": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "NumberOfRecordsToProcess",
                    "type": "integer",
                    "value": "@length(body('Parse_JSON')?['rows'])"
                  }
                ]
              }
            },
            "Initialize_SCIMBulkPayload": {
              "runAfter": {
                "Initialize_IterationCount": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "SCIMBulkPayload",
                    "type": "string",
                    "value": "{\n  \"schemas\": [\n    \"urn:ietf:params:scim:api:messages:2.0:BulkRequest\"\n  ],\n  \"Operations\": [\n"
                  }
                ]
              }
            },
            "Parse_JSON": {
              "runAfter": {
                "Convert_CSV_to_JSON": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@body('Convert_CSV_to_JSON')",
                "schema": {
                  "properties": {
                    "rows": {
                      "items": {
                        "properties": {
                          "City": {
                            "type": "string"
                          },
                          "Company": {
                            "type": "string"
                          },
                          "CostCenter": {
                            "type": "string"
                          },
                          "CountryCode": {
                            "type": "string"
                          },
                          "Custom01": {
                            "type": "string"
                          },
                          "Custom02": {
                            "type": "string"
                          },
                          "Department": {
                            "type": "string"
                          },
                          "Division": {
                            "type": "string"
                          },
                          "FirstName": {
                            "type": "string"
                          },
                          "FullName": {
                            "type": "string"
                          },
                          "GenderPronoun": {
                            "type": "string"
                          },
                          "HireDate": {
                            "type": "string"
                          },
                          "JobTitle": {
                            "type": "string"
                          },
                          "LastName": {
                            "type": "string"
                          },
                          "Location": {
                            "type": "string"
                          },
                          "ManagerID": {
                            "type": "string"
                          },
                          "OfficePhone": {
                            "type": "string"
                          },
                          "OnLeave": {
                            "type": "string"
                          },
                          "StreetAddress": {
                            "type": "string"
                          },
                          "UserID": {
                            "type": "string"
                          },
                          "WorkerID": {
                            "type": "string"
                          },
                          "WorkerStatus": {
                            "type": "string"
                          },
                          "WorkerType": {
                            "type": "string"
                          },
                          "ZipCode": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "WorkerID",
                          "WorkerStatus",
                          "WorkerType",
                          "UserID",
                          "FirstName",
                          "LastName",
                          "FullName"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azurefile": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azurefile')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azurefile_name'))]",
                "connectionName": "[parameters('azurefile_name')]"
              }
            }
          }
        }
      },
      "identity": {
        "type": "SystemAssigned"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('azurefile_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azurefile')]"
        },
        "displayName": "[parameters('azurefile_displayName')]",
        "parameterValues": {
          "accountName": "[parameters('azurefile_accountName')]",
          "accessKey": "[parameters('azurefile_accessKey')]"
        }
      }
    }
  ],
  "outputs": {}
}
